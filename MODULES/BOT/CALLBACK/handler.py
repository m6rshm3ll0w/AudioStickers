from telebot import types

from MODULES.BD.init import cursor, PREP_BACKUP
from MODULES.BOT.ACTIONS.ADMIN.add import ADM_ID
from MODULES.BOT.ACTIONS.ADMIN.remove import DEL_ADM_U_ID
from MODULES.BOT.ACTIONS.BAN.add import B_U_ID
from MODULES.BOT.ACTIONS.BAN.remove import UB_U_ID
from MODULES.BOT.START.main_menu import main_menu
from MODULES.BOT.STICKERS.EDIT.delete import D_S
from MODULES.BOT.STICKERS.EDIT.edit_data import E_S_P
from MODULES.BOT.VIEWERS.admins import ADM_LIST
from MODULES.BOT.VIEWERS.banned_users import Ban_LIST
from MODULES.BOT.VIEWERS.stickers import all_s, set_page
from MODULES.BOT.VIEWERS.users import USR_LIST
from MODULES.BOT.init import bot
from MODULES.OTHER.global_init import VERSION, code_by, audio_by


def callback_handler_main(callback):
    print(">>> callback")
    if callback.data == "about":
        print("    > page about")
        cursor.execute(f'SELECT * FROM audio')
        Stickers = cursor.fetchall()
        n_of_s = len(Stickers)

        AUTHORS = (f"code {VERSION}\n"
                   f"> {"\n".join(code_by.split("\\n"))}\n"
                   f"_____________________\n"
                   f"audio : {n_of_s}\n"
                   f"> {"\n> ".join(audio_by.split("\\n"))}")
        try:
            bot.answer_callback_query(callback_query_id=callback.id, text=AUTHORS,
                                      show_alert=True)
        except Exception:
            print("ERROR in handler.py : line 35")

    elif callback.data == "main_menu":
        print("    > returning to main_menu")
        main_menu(callback.message)

    elif callback.data == "howto":
        print("    > learn page")
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üòâ", callback_data="main_menu")
        markup.add(back)
        bot.edit_message_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø—Ä–æ—â–µ —á–µ–º —Ç–µ–±–µ –∫–∞–∂–µ—Ç—Å—è, "
                              "–ø—Ä–æ—Å—Ç–æ –≤ —á–∞—Ç–µ —Å –¥—Ä—É–≥–æ–º –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞–ø–∏—à–∏ @asmembot –∏ –≤—ã–±–µ—Ä–∏ –≤–æ–π—Å-—Å—Ç–∏–∫–µ—Ä, "
                              "–µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è, –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞...\n"
                              "–î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, —Ç—É—Ç –µ—Å—Ç—å –ø–æ–∏—Å–∫ \n"
                              "\n"
                              "**Inline —Ä–µ–∂–∏–º** \n"
                              "-> –ø–æ –∞–≤—Ç–æ—Ä–∞–º - @\n"
                              "-> –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
                              "-> –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º\n"
                              "-> –ø–æ —Ç–µ–≥–∞–º - #\n"
                              "-> —Ä–∞–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ - $\n"
                              "-> –≤—ã–∑–æ–≤ Chat GPT - '&(–∑–∞–ø—Ä–æ—Å)#'\n"
                              "\n"
                              "**–ë–û–¢**\n"
                              "-> –ù–∞–ø–∏—à–∏ ```bash /generate (—Ç–≤–æ–π –ø—Ä–æ–º–ø—Ç)``` –∏ –ø–æ–¥–æ–∂–¥–∏ ~20—Å–µ–∫\n"
                              "\n"
                              "**–í–ê–ñ–ù–û–ï**\n"
                              "–ï—Å–ª–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –≤–∏–¥–∏—Ç–µ –ø–æ–º–µ—Ç–∫—É R18 - "
                              "—ç—Ç–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É –¥–∞–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ—Å—Ç–∏–∫–µ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥ 18+, –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã !!!\n"
                              "–í—Å–µ —Å—Ç–∏–∫–µ—Ä—ã –º–æ–¥–µ—Ä–∏—Ä—É—é—Ç—Å—è\n"
                              "\n"
                              "**–ü–†–ê–í–ò–õ–ê**\n"
                              "–£–°–õ–û–í–ò–Ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞:\n"
                              "1.–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞ –Ω–µ—Ç\n"
                              "2.–î–æ–±–∞–≤—å—Ç–µ '(R18)', –µ—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –∞—É–¥–∏–æ 18+\n"
                              "3.–ó–∞ 2 –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, "
                              "–∞ –∑–∞ 3 - –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ç–∏–∫–µ—Ä—ã\n"
                              "\n"
                              "—ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è\n"
                              "–≤–æ—Ç –∏ –≤—Å–µ, —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ\n"
                              "\n"
                              "–ü.–° —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ—Ä–µ–∑ –ø—É–Ω–∫—Ç \n"
                              "'–≤—Å–µ –≤–æ–π—Å-—Å—Ç–∏–∫–µ—Ä—ã' ü§ó", parse_mode="Markdown", chat_id=callback.message.chat.id,
                              message_id=callback.message.id, reply_markup=markup)


    elif callback.data == "admin_panel":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        mmss = bot.send_message(chat_id=callback.message.chat.id, text="–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
        main_menu(mmss, ADMIN_PANEL=True)

    elif callback.data == "admin_panel_dis":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        mmss = bot.send_message(chat_id=callback.message.chat.id, text="–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
        main_menu(mmss, ADMIN_PANEL=False)


    elif callback.data == "allmems":
        print("    > viewer page")
        set_page(1)
        all_s(callback.message)

    elif callback.data == "page+1":
        set_page(1, plus=True)
        all_s(callback.message)

    elif callback.data == "edit_s":
        print("    > editing")
        mmss = bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                     text="–≤–≤–µ–¥–∏ id —Å—Ç–∏–∫–µ—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        bot.register_next_step_handler(callback.message, E_S_P, mmss)

    elif callback.data == "del_s":
        print("    > deleting")
        mmss = bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                     text="–≤–≤–µ–¥–∏ id —Å—Ç–∏–∫–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        bot.register_next_step_handler(callback.message, D_S, mmss)

    elif callback.data == "page-1":
        set_page(1, minus=True)
        all_s(callback.message)

    elif callback.data == "banuser":
        print("    > banuser")
        mmss = bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                     text="–≤–≤–µ–¥–∏ ID —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–Ω–ª–∏—Å—Ç –∏–ª–∏ /back ... ")
        bot.register_next_step_handler(callback.message, B_U_ID, mmss)

    elif callback.data == "unbanuser":
        print("    > unbanuser")
        mmss = bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                     text="–≤–≤–µ–¥–∏ ID —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –±–∞–Ω–ª–∏—Å—Ç–∞ –∏–ª–∏ /back ... ")
        bot.register_next_step_handler(callback.message, UB_U_ID, mmss)

    elif callback.data == "admlist":
        print("    > admlist")
        ADM_LIST(callback.message)

    elif callback.data == "userlist":
        print("    > usrlist")
        USR_LIST(callback.message)

    elif callback.data == "backupbd":
        PREP_BACKUP(callback.message)

    elif callback.data == "addadm":
        print("    > add adm")
        mmss = bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                     text="–≤–≤–µ–¥–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @, –æ–±—Ä–∞–∑–µ—Ü: @gsa)"
                                          " –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—ã –∏–ª–∏ /back ... ")
        bot.register_next_step_handler(callback.message, ADM_ID, mmss)

    elif callback.data == "deladm":
        print("    > del adm")
        mmss = bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                     text="–≤–≤–µ–¥–∏ ID —á–µ–ª–æ–≤–µ–∫–∞ (–º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ '–∞–¥–º–∏–Ω—ã')"
                                          " –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤ –∏–ª–∏ /back ... ")
        bot.register_next_step_handler(callback.message, DEL_ADM_U_ID, mmss)

    elif callback.data == "banlist":
        print("    > banlist")
        Ban_LIST(callback.message)

    elif callback.data == "del_msg":
        print("    > delmsg")
        bot.delete_message(callback.message.chat.id, callback.message.message_id)

    elif callback.data == "addsticker":
        print(f"    > adding a sticker(help)")
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üòë", callback_data="main_menu")
        markup.add(back)
        bot.edit_message_text("–¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞ —Ç–µ–±–µ –≤—Å–µ–≥–æ –ª–∏—à—å –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ "
                              ".mp3 (–º–∞–∫—Å 30 —Å–µ–∫—É–Ω–¥) –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, "
                              "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–π —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö –∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å—Ç–∏–∫–µ—Ä–æ–≤,"
                              " –∏–Ω–∞—á–µ –∞–¥–º–∏–Ω—ã —Ç–µ–±—è –∑–∞–±–∞–Ω—è—Ç )))",
                              callback.message.chat.id,
                              callback.message.id, reply_markup=markup)

    elif callback.data == "license":
        LICENSE = ("–£–°–õ–û–í–ò–Ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞:\n"
                   "1.–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞ –Ω–µ—Ç\n"
                   "2.–î–æ–±–∞–≤—å—Ç–µ '(R18)', –µ—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –∞—É–¥–∏–æ 18+\n"
                   "3.–ó–∞ 2 –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, "
                   "–∞ –∑–∞ 3 - –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ç–∏–∫–µ—Ä—ã")
        bot.answer_callback_query(callback_query_id=callback.id, text=LICENSE,
                                  show_alert=True)
